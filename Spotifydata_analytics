# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

-------Determine the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name


----What is the top 5 artist based on popularity
SELECT artist_name,popularity
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 5

-----What is the average duration per arist?
SELECT artist_name, AVG(duration_ms)AS average_duration FROM Spotifydata
GROUP BY artist_name


------How many tracks have a tempo greater that 110.97
SELECT COUNT(track_id) AS num_track FROM Spotifydata
WHERE tempo > 110.97

------What's the average danceability for the 10 most popular songs?
SELECT track_name, AVG(danceability)  FROM Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 10

------All songs by doja cat and bruno mars
SELECT artist_name,track_name FROM Spotifydata
WHERE artist_name = 'Doja Cat' OR artist_name = 'Bruno Mars'

-----Put songs into genres. If daneablity is over 0.7 then genre is pop music. If danceability is between 0.6 and 0.7 then genre is R&B music. If dancebility is less than 0.6 then country
SELECT track_name, artist_name,
CASE
  WHEN danceability > 0.7 
  THEN "pop"
  WHEN danceability BETWEEN 0.6 AND 0.7
  THEN "R&B"
  ELSE "country"
  END AS Genre
 FROM Spotifydata
 
-----calculate the average popularity for the artists in the table. Then, for every artist with an average popularity of 90 or above, you need to show their name, their average popularity, and label them as a “Top Star”.
------First I create a CTE
WITH popularity_average_CTE AS (
SELECT artist_name,
AVG(popularity) AS average_popularity
FROM SpotifyData  
GROUP BY artist_name
)
-----Then I select the information FROM the CTE that's needed, and also add a "Top Star" tag.

SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;

