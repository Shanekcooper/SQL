----- For this project I use datalemur.com to solve some SQl practice questions.

-----Question #1 - Assume you are given the tables below about Facebook pages and page likes. 
------Write a query to return the page IDs of all the Facebook pages that don't have any likes. The output should be in ascending order.
SELECT pages.page_id 
FROM pages
LEFT JOIN page_likes
ON pages.page_id = page_likes.page_id
WHERE liked_date IS NULL
ORDER BY pages.page_id;

-----Question #2 - Given a table of candidates and their skills, you're tasked with finding the candidates best suited for an open Data Science job. 
You want to find candidates who are proficient in Python, Tableau, and PostgreSQL.
Write a query to list the candidates who possess all of the required skills for the job. Sort the the output by candidate ID in ascending order.
SELECT candidate_id 
FROM candidates 
WHERE skill IN('Python' ,'Tableau' ,'PostgreSQL')
GROUP BY candidate_id 
HAVING COUNT (skill) = 3
Order BY candidate_id;

----Q3Tesla is investigating bottlenecks in their production, and they need your help to extract the relevant data. 
Write a SQL query that determines which parts have begun the assembly process but are not yet finished.
SELECT DISTINCT part 
FROM parts_assembly
WHERE finish_date IS NULL;

-------Q4 Assume that you are given the table below containing information on viewership by device type (where the three types are laptop, tablet, and phone). 
Define “mobile” as the sum of tablet and phone viewership numbers. Write a query to compare the viewership on laptops versus mobile devices.
Output the total viewership for laptop and mobile devices in the format of "laptop_views" and "mobile_views".
SELECT
SUM(CASE WHEN device_type = 'laptop' THEN 1 ELSE 0
END) AS laptop_views,
SUM (CASE WHEN device_type IN ('tablet','phone')THEN 1 ELSE 0
END) AS mobile_views
FROM viewership;
---------Q5 You are given the tables below containing information on Robinhood trades and users. 
Write a query to list the top three cities that have the most completed trade orders in descending order.Output the city and number of orders.
SELECT users.city, COUNT(order_id) AS total_orders FROM trades
INNER JOIN users
ON trades.user_id = users. user_id
WHERE trades.status = 'Completed'
GROUP BY users.city
Order BY total_orders DESC
LIMIT 3;
-------Q6 Assume you are given the table below that shows job postings for all companies on the LinkedIn platform. 
Write a query to get the number of companies that have posted duplicate job listing.
SELECT COUNT(DISTINCT company_id) AS co_w_duplicate_jobs
FROM (
  SELECT 
    company_id, 
    title, 
    description, 
    COUNT(job_id) AS job_count
  FROM job_listings
  GROUP BY 
    company_id, 
    title, 
    description) AS jobs_grouped
WHERE job_count > 1;
